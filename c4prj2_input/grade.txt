Grading at Tue Aug  4 18:32:12 UTC 2020
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Line_2_did_not_match
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Line_2_did_not_match
Line_3_did_not_match
Line_4_did_not_match
Line_5_did_not_match
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==551== Memcheck, a memory error detector
==551== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==551== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==551== Command: ./tester h.txt d.txt
==551== Parent PID: 550
==551== 
==551== Invalid write of size 8
==551==    at 0x400EB8: add_future_card (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x400D16: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x400ABA: read_input (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x401BC0: main (test-input.c:69)
==551==  Address 0x5205798 is 0 bytes after a block of size 8 alloc'd
==551==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==551==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==551==    by 0x400E7A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x400D16: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x400ABA: read_input (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x401BC0: main (test-input.c:69)
==551== 
==551== Invalid write of size 8
==551==    at 0x400E9B: add_future_card (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x400D16: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x400ABA: read_input (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x401BC0: main (test-input.c:69)
==551==  Address 0x52057f0 is 0 bytes after a block of size 16 alloc'd
==551==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==551==    by 0x400E7A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x400D16: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x400ABA: read_input (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x401BC0: main (test-input.c:69)
==551== 

valgrind: m_mallocfree.c:277 (mk_plain_bszB): Assertion 'bszB != 0' failed.
valgrind: This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==551==    at 0x38083F48: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==551==    by 0x38084064: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==551==    by 0x380841F1: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==551==    by 0x38091F36: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==551==    by 0x38051369: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==551==    by 0x380D4CF3: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==551==    by 0x380E3946: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 551)
==551==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==551==    by 0x400E7A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x400D16: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x400ABA: read_input (in /graderhome/work/c4prj2_input/tester)
==551==    by 0x401BC0: main (test-input.c:69)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==557== Memcheck, a memory error detector
==557== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==557== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==557== Command: ./tester i1 i2
==557== Parent PID: 556
==557== 
==557== Invalid write of size 8
==557==    at 0x400EB8: add_future_card (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x400D16: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x400ABA: read_input (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x401BC0: main (test-input.c:69)
==557==  Address 0x5205598 is 0 bytes after a block of size 8 alloc'd
==557==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==557==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==557==    by 0x400E7A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x400D16: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x400ABA: read_input (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x401BC0: main (test-input.c:69)
==557== 
==557== Invalid write of size 8
==557==    at 0x400E9B: add_future_card (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x400D16: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x400ABA: read_input (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x401BC0: main (test-input.c:69)
==557==  Address 0x52055f0 is 0 bytes after a block of size 16 alloc'd
==557==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==557==    by 0x400E7A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x400D16: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x400ABA: read_input (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x401BC0: main (test-input.c:69)
==557== 

valgrind: m_mallocfree.c:277 (mk_plain_bszB): Assertion 'bszB != 0' failed.
valgrind: This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==557==    at 0x38083F48: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==557==    by 0x38084064: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==557==    by 0x380841F1: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==557==    by 0x38091F36: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==557==    by 0x38051369: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==557==    by 0x380D4CF3: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==557==    by 0x380E3946: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 557)
==557==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==557==    by 0x400E7A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x400D16: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x400ABA: read_input (in /graderhome/work/c4prj2_input/tester)
==557==    by 0x401BC0: main (test-input.c:69)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.


Overall Grade: F
