Grading at Sun Aug  2 08:21:55 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==124== Memcheck, a memory error detector
==124== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==124== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==124== Command: ./tester act
==124== Parent PID: 123
==124== 
==124== Use of uninitialised value of size 8
==124==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==124==    by 0x404032: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==124==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==124== 
==124== Invalid write of size 8
==124==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==124==    by 0x404032: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==124==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==124==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==124== 
==124== 
==124== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==124==  Access not within mapped region at address 0x0
==124==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==124==    by 0x404032: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==124==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==124==  If you believe this happened as a result of a stack
==124==  overflow in your program's main thread (unlikely but
==124==  possible), you can try to increase the size of the
==124==  main thread stack using the --main-stacksize= flag.
==124==  The main thread stack size used in this run was 8388608.
==124== 
==124== HEAP SUMMARY:
==124==     in use at exit: 904 bytes in 58 blocks
==124==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==124== 
==124== LEAK SUMMARY:
==124==    definitely lost: 0 bytes in 0 blocks
==124==    indirectly lost: 0 bytes in 0 blocks
==124==      possibly lost: 0 bytes in 0 blocks
==124==    still reachable: 904 bytes in 58 blocks
==124==         suppressed: 0 bytes in 0 blocks
==124== Rerun with --leak-check=full to see details of leaked memory
==124== 
==124== For counts of detected and suppressed errors, rerun with: -v
==124== Use --track-origins=yes to see where uninitialised values come from
==124== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
Expected deck: Ad Ac 2s ?0
 
Your deck: Ad Ac 2s 
Expected deck: Ks Kh Kd Kc As Ah 2h 2d 2c 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 
Your deck: Ks Kh Kd Kc As Ah 2h 2d 2c 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 2s 2h 2d 2c ?0
 ?1
 
Your deck: 2s 2h 2d 2c 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 2d 2c 3s 3h 3d ?0
 ?1
 ?2
 
Your deck: 2d 2c 3s 3h 3d 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 3s 3h 3d 3c 4s 4h ?0
 ?1
 ?2
 ?3
 
Your deck: 3s 3h 3d 3c 4s 4h 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 ?3
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 3d 3c 4s 4h 4d 4c 5s ?0
 ?1
 ?2
 ?3
 ?4
 
Your deck: 3d 3c 4s 4h 4d 4c 5s 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 3s 3h 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 ?3
 ?4
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 3s 3h 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
- Test failed
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==131== Memcheck, a memory error detector
==131== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==131== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==131== Command: ./tester mde
==131== Parent PID: 130
==131== 
==131== Use of uninitialised value of size 8
==131==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==131==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==131==    by 0x40371C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==131==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==131== 
==131== Invalid write of size 8
==131==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==131==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==131==    by 0x40371C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==131==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==131==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==131== 
==131== 
==131== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==131==  Access not within mapped region at address 0x0
==131==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==131==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==131==    by 0x40371C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==131==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==131==  If you believe this happened as a result of a stack
==131==  overflow in your program's main thread (unlikely but
==131==  possible), you can try to increase the size of the
==131==  main thread stack using the --main-stacksize= flag.
==131==  The main thread stack size used in this run was 8388608.
==131== 
==131== HEAP SUMMARY:
==131==     in use at exit: 888 bytes in 57 blocks
==131==   total heap usage: 57 allocs, 0 frees, 888 bytes allocated
==131== 
==131== LEAK SUMMARY:
==131==    definitely lost: 0 bytes in 0 blocks
==131==    indirectly lost: 0 bytes in 0 blocks
==131==      possibly lost: 0 bytes in 0 blocks
==131==    still reachable: 888 bytes in 57 blocks
==131==         suppressed: 0 bytes in 0 blocks
==131== Rerun with --leak-check=full to see details of leaked memory
==131== 
==131== For counts of detected and suppressed errors, rerun with: -v
==131== Use --track-origins=yes to see where uninitialised values come from
==131== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==135== Memcheck, a memory error detector
==135== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==135== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==135== Command: ./tester brd
==135== Parent PID: 134
==135== 
==135== Conditional jump or move depends on uninitialised value(s)
==135==    at 0x4C2FD0C: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==135==    by 0x4020B5: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40224E: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40337C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==135== 
==135== Conditional jump or move depends on uninitialised value(s)
==135==    at 0x4C2DB3C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==135==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==135==    by 0x4020B5: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40224E: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40337C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==135== 
==135== Use of uninitialised value of size 8
==135==    at 0x4020D6: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40224E: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40337C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==135== 
==135== Use of uninitialised value of size 8
==135==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40224E: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40337C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==135== 
==135== Invalid write of size 8
==135==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40224E: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40337C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==135==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==135== 
==135== 
==135== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==135==  Access not within mapped region at address 0x0
==135==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40224E: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x40337C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==135==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==135==  If you believe this happened as a result of a stack
==135==  overflow in your program's main thread (unlikely but
==135==  possible), you can try to increase the size of the
==135==  main thread stack using the --main-stacksize= flag.
==135==  The main thread stack size used in this run was 8388608.
==135== 
==135== HEAP SUMMARY:
==135==     in use at exit: 120 bytes in 11 blocks
==135==   total heap usage: 12 allocs, 1 frees, 4,216 bytes allocated
==135== 
==135== LEAK SUMMARY:
==135==    definitely lost: 0 bytes in 0 blocks
==135==    indirectly lost: 0 bytes in 0 blocks
==135==      possibly lost: 0 bytes in 0 blocks
==135==    still reachable: 120 bytes in 11 blocks
==135==         suppressed: 0 bytes in 0 blocks
==135== Rerun with --leak-check=full to see details of leaked memory
==135== 
==135== For counts of detected and suppressed errors, rerun with: -v
==135== Use --track-origins=yes to see where uninitialised values come from
==135== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
