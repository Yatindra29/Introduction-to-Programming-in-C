Grading at Sun Aug  2 09:32:55 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==554== Memcheck, a memory error detector
==554== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==554== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==554== Command: ./tester act
==554== Parent PID: 553
==554== 
==554== Use of uninitialised value of size 8
==554==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==554==    by 0x404052: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==554==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==554== 
==554== Invalid write of size 8
==554==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==554==    by 0x404052: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==554==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==554==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==554== 
==554== 
==554== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==554==  Access not within mapped region at address 0x0
==554==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==554==    by 0x404052: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==554==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==554==  If you believe this happened as a result of a stack
==554==  overflow in your program's main thread (unlikely but
==554==  possible), you can try to increase the size of the
==554==  main thread stack using the --main-stacksize= flag.
==554==  The main thread stack size used in this run was 8388608.
==554== 
==554== HEAP SUMMARY:
==554==     in use at exit: 904 bytes in 58 blocks
==554==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==554== 
==554== LEAK SUMMARY:
==554==    definitely lost: 0 bytes in 0 blocks
==554==    indirectly lost: 0 bytes in 0 blocks
==554==      possibly lost: 0 bytes in 0 blocks
==554==    still reachable: 904 bytes in 58 blocks
==554==         suppressed: 0 bytes in 0 blocks
==554== Rerun with --leak-check=full to see details of leaked memory
==554== 
==554== For counts of detected and suppressed errors, rerun with: -v
==554== Use --track-origins=yes to see where uninitialised values come from
==554== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
Expected deck: Ad Ac 2s ?0
 
Your deck: Ad Ac 2s 
Expected deck: Ks Kh Kd Kc As Ah 2h 2d 2c 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 
Your deck: Ks Kh Kd Kc As Ah 2h 2d 2c 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 2s 2h 2d 2c ?0
 ?1
 
Your deck: 2s 2h 2d 2c 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 2d 2c 3s 3h 3d ?0
 ?1
 ?2
 
Your deck: 2d 2c 3s 3h 3d 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 3s 3h 3d 3c 4s 4h ?0
 ?1
 ?2
 ?3
 
Your deck: 3s 3h 3d 3c 4s 4h 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 ?3
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 3d 3c 4s 4h 4d 4c 5s ?0
 ?1
 ?2
 ?3
 ?4
 
Your deck: 3d 3c 4s 4h 4d 4c 5s 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 3s 3h 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 ?3
 ?4
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 3s 3h 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
- Test failed
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==561== Memcheck, a memory error detector
==561== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==561== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==561== Command: ./tester mde
==561== Parent PID: 560
==561== 
==561== Use of uninitialised value of size 8
==561==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==561==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==561==    by 0x40373C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==561==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==561== 
==561== Invalid write of size 8
==561==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==561==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==561==    by 0x40373C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==561==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==561==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==561== 
==561== 
==561== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==561==  Access not within mapped region at address 0x0
==561==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==561==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==561==    by 0x40373C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==561==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==561==  If you believe this happened as a result of a stack
==561==  overflow in your program's main thread (unlikely but
==561==  possible), you can try to increase the size of the
==561==  main thread stack using the --main-stacksize= flag.
==561==  The main thread stack size used in this run was 8388608.
==561== 
==561== HEAP SUMMARY:
==561==     in use at exit: 888 bytes in 57 blocks
==561==   total heap usage: 57 allocs, 0 frees, 888 bytes allocated
==561== 
==561== LEAK SUMMARY:
==561==    definitely lost: 0 bytes in 0 blocks
==561==    indirectly lost: 0 bytes in 0 blocks
==561==      possibly lost: 0 bytes in 0 blocks
==561==    still reachable: 888 bytes in 57 blocks
==561==         suppressed: 0 bytes in 0 blocks
==561== Rerun with --leak-check=full to see details of leaked memory
==561== 
==561== For counts of detected and suppressed errors, rerun with: -v
==561== Use --track-origins=yes to see where uninitialised values come from
==561== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==565== Memcheck, a memory error detector
==565== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==565== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==565== Command: ./tester brd
==565== Parent PID: 564
==565== 
==565== Use of uninitialised value of size 8
==565==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==565==    by 0x402255: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==565==    by 0x40339C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==565==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==565== 
==565== Invalid write of size 8
==565==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==565==    by 0x402255: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==565==    by 0x40339C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==565==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==565==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==565== 
==565== 
==565== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==565==  Access not within mapped region at address 0x0
==565==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==565==    by 0x402255: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==565==    by 0x40339C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==565==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==565==  If you believe this happened as a result of a stack
==565==  overflow in your program's main thread (unlikely but
==565==  possible), you can try to increase the size of the
==565==  main thread stack using the --main-stacksize= flag.
==565==  The main thread stack size used in this run was 8388608.
==565== 
==565== HEAP SUMMARY:
==565==     in use at exit: 120 bytes in 11 blocks
==565==   total heap usage: 12 allocs, 1 frees, 4,216 bytes allocated
==565== 
==565== LEAK SUMMARY:
==565==    definitely lost: 0 bytes in 0 blocks
==565==    indirectly lost: 0 bytes in 0 blocks
==565==      possibly lost: 0 bytes in 0 blocks
==565==    still reachable: 120 bytes in 11 blocks
==565==         suppressed: 0 bytes in 0 blocks
==565== Rerun with --leak-check=full to see details of leaked memory
==565== 
==565== For counts of detected and suppressed errors, rerun with: -v
==565== Use --track-origins=yes to see where uninitialised values come from
==565== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
