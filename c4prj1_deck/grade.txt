Grading at Sun Aug  2 09:27:20 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==413== Memcheck, a memory error detector
==413== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==413== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==413== Command: ./tester act
==413== Parent PID: 412
==413== 
==413== Use of uninitialised value of size 8
==413==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==413==    by 0x404072: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==413==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==413== 
==413== Invalid write of size 8
==413==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==413==    by 0x404072: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==413==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==413==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==413== 
==413== 
==413== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==413==  Access not within mapped region at address 0x0
==413==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==413==    by 0x404072: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==413==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==413==  If you believe this happened as a result of a stack
==413==  overflow in your program's main thread (unlikely but
==413==  possible), you can try to increase the size of the
==413==  main thread stack using the --main-stacksize= flag.
==413==  The main thread stack size used in this run was 8388608.
==413== 
==413== HEAP SUMMARY:
==413==     in use at exit: 904 bytes in 58 blocks
==413==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==413== 
==413== LEAK SUMMARY:
==413==    definitely lost: 0 bytes in 0 blocks
==413==    indirectly lost: 0 bytes in 0 blocks
==413==      possibly lost: 0 bytes in 0 blocks
==413==    still reachable: 904 bytes in 58 blocks
==413==         suppressed: 0 bytes in 0 blocks
==413== Rerun with --leak-check=full to see details of leaked memory
==413== 
==413== For counts of detected and suppressed errors, rerun with: -v
==413== Use --track-origins=yes to see where uninitialised values come from
==413== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
Expected deck: Ad Ac 2s ?0
 
Your deck: Ad Ac 2s 
Expected deck: Ks Kh Kd Kc As Ah 2h 2d 2c 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 
Your deck: Ks Kh Kd Kc As Ah 2h 2d 2c 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 2s 2h 2d 2c ?0
 ?1
 
Your deck: 2s 2h 2d 2c 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 2d 2c 3s 3h 3d ?0
 ?1
 ?2
 
Your deck: 2d 2c 3s 3h 3d 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 3s 3h 3d 3c 4s 4h ?0
 ?1
 ?2
 ?3
 
Your deck: 3s 3h 3d 3c 4s 4h 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 ?3
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 3d 3c 4s 4h 4d 4c 5s ?0
 ?1
 ?2
 ?3
 ?4
 
Your deck: 3d 3c 4s 4h 4d 4c 5s 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 3s 3h 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 ?3
 ?4
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 3s 3h 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
- Test failed
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==420== Memcheck, a memory error detector
==420== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==420== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==420== Command: ./tester mde
==420== Parent PID: 419
==420== 
==420== Use of uninitialised value of size 8
==420==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==420==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==420==    by 0x40375C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==420==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==420== 
==420== Invalid write of size 8
==420==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==420==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==420==    by 0x40375C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==420==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==420==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==420== 
==420== 
==420== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==420==  Access not within mapped region at address 0x0
==420==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==420==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==420==    by 0x40375C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==420==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==420==  If you believe this happened as a result of a stack
==420==  overflow in your program's main thread (unlikely but
==420==  possible), you can try to increase the size of the
==420==  main thread stack using the --main-stacksize= flag.
==420==  The main thread stack size used in this run was 8388608.
==420== 
==420== HEAP SUMMARY:
==420==     in use at exit: 888 bytes in 57 blocks
==420==   total heap usage: 57 allocs, 0 frees, 888 bytes allocated
==420== 
==420== LEAK SUMMARY:
==420==    definitely lost: 0 bytes in 0 blocks
==420==    indirectly lost: 0 bytes in 0 blocks
==420==      possibly lost: 0 bytes in 0 blocks
==420==    still reachable: 888 bytes in 57 blocks
==420==         suppressed: 0 bytes in 0 blocks
==420== Rerun with --leak-check=full to see details of leaked memory
==420== 
==420== For counts of detected and suppressed errors, rerun with: -v
==420== Use --track-origins=yes to see where uninitialised values come from
==420== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==424== Memcheck, a memory error detector
==424== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==424== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==424== Command: ./tester brd
==424== Parent PID: 423
==424== 
==424== Use of uninitialised value of size 8
==424==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==424==    by 0x402282: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==424==    by 0x4033BC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==424==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==424== 
==424== Invalid write of size 8
==424==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==424==    by 0x402282: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==424==    by 0x4033BC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==424==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==424==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==424== 
==424== 
==424== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==424==  Access not within mapped region at address 0x0
==424==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==424==    by 0x402282: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==424==    by 0x4033BC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==424==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==424==  If you believe this happened as a result of a stack
==424==  overflow in your program's main thread (unlikely but
==424==  possible), you can try to increase the size of the
==424==  main thread stack using the --main-stacksize= flag.
==424==  The main thread stack size used in this run was 8388608.
==424== 
==424== HEAP SUMMARY:
==424==     in use at exit: 136 bytes in 12 blocks
==424==   total heap usage: 13 allocs, 1 frees, 4,232 bytes allocated
==424== 
==424== LEAK SUMMARY:
==424==    definitely lost: 16 bytes in 1 blocks
==424==    indirectly lost: 0 bytes in 0 blocks
==424==      possibly lost: 0 bytes in 0 blocks
==424==    still reachable: 120 bytes in 11 blocks
==424==         suppressed: 0 bytes in 0 blocks
==424== Rerun with --leak-check=full to see details of leaked memory
==424== 
==424== For counts of detected and suppressed errors, rerun with: -v
==424== Use --track-origins=yes to see where uninitialised values come from
==424== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
