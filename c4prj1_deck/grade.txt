Grading at Sun Aug  2 10:17:52 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==1344== Memcheck, a memory error detector
==1344== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1344== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1344== Command: ./tester act
==1344== Parent PID: 1343
==1344== 
==1344== Use of uninitialised value of size 8
==1344==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1344==    by 0x404052: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1344==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1344== 
==1344== Invalid write of size 8
==1344==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1344==    by 0x404052: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1344==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1344==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1344== 
==1344== 
==1344== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1344==  Access not within mapped region at address 0x0
==1344==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1344==    by 0x404052: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1344==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1344==  If you believe this happened as a result of a stack
==1344==  overflow in your program's main thread (unlikely but
==1344==  possible), you can try to increase the size of the
==1344==  main thread stack using the --main-stacksize= flag.
==1344==  The main thread stack size used in this run was 8388608.
==1344== 
==1344== HEAP SUMMARY:
==1344==     in use at exit: 904 bytes in 58 blocks
==1344==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==1344== 
==1344== LEAK SUMMARY:
==1344==    definitely lost: 0 bytes in 0 blocks
==1344==    indirectly lost: 0 bytes in 0 blocks
==1344==      possibly lost: 0 bytes in 0 blocks
==1344==    still reachable: 904 bytes in 58 blocks
==1344==         suppressed: 0 bytes in 0 blocks
==1344== Rerun with --leak-check=full to see details of leaked memory
==1344== 
==1344== For counts of detected and suppressed errors, rerun with: -v
==1344== Use --track-origins=yes to see where uninitialised values come from
==1344== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
Expected deck: Ad Ac 2s ?0
 
Your deck: Ad Ac 2s 
Expected deck: Ks Kh Kd Kc As Ah 2h 2d 2c 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 
Your deck: Ks Kh Kd Kc As Ah 2h 2d 2c 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 2s 2h 2d 2c ?0
 ?1
 
Your deck: 2s 2h 2d 2c 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 3s 3h 3d 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 2d 2c 3s 3h 3d ?0
 ?1
 ?2
 
Your deck: 2d 2c 3s 3h 3d 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 3c 4s 4h 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 3s 3h 3d 3c 4s 4h ?0
 ?1
 ?2
 ?3
 
Your deck: 3s 3h 3d 3c 4s 4h 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 ?3
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 4d 4c 5s 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
Expected deck: 3d 3c 4s 4h 4d 4c 5s ?0
 ?1
 ?2
 ?3
 ?4
 
Your deck: 3d 3c 4s 4h 4d 4c 5s 
Expected deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 3s 3h 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc ?0
 ?1
 ?2
 ?3
 ?4
 
Your deck: Ks Kh Kd Kc As Ah Ad Ac 2s 2h 2d 2c 3s 3h 5h 5d 5c 6s 6h 6d 6c 7s 7h 7d 7c 8s 8h 8d 8c 9s 9h 9d 9c 0s 0h 0d 0c Js Jh Jd Jc Qs Qh Qd Qc 
- Test failed
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1351== Memcheck, a memory error detector
==1351== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1351== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1351== Command: ./tester mde
==1351== Parent PID: 1350
==1351== 
==1351== Use of uninitialised value of size 8
==1351==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1351==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1351==    by 0x40373C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1351==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1351== 
==1351== Invalid write of size 8
==1351==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1351==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1351==    by 0x40373C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1351==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1351==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1351== 
==1351== 
==1351== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1351==  Access not within mapped region at address 0x0
==1351==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1351==    by 0x40219D: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1351==    by 0x40373C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1351==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1351==  If you believe this happened as a result of a stack
==1351==  overflow in your program's main thread (unlikely but
==1351==  possible), you can try to increase the size of the
==1351==  main thread stack using the --main-stacksize= flag.
==1351==  The main thread stack size used in this run was 8388608.
==1351== 
==1351== HEAP SUMMARY:
==1351==     in use at exit: 888 bytes in 57 blocks
==1351==   total heap usage: 57 allocs, 0 frees, 888 bytes allocated
==1351== 
==1351== LEAK SUMMARY:
==1351==    definitely lost: 0 bytes in 0 blocks
==1351==    indirectly lost: 0 bytes in 0 blocks
==1351==      possibly lost: 0 bytes in 0 blocks
==1351==    still reachable: 888 bytes in 57 blocks
==1351==         suppressed: 0 bytes in 0 blocks
==1351== Rerun with --leak-check=full to see details of leaked memory
==1351== 
==1351== For counts of detected and suppressed errors, rerun with: -v
==1351== Use --track-origins=yes to see where uninitialised values come from
==1351== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==1355== Memcheck, a memory error detector
==1355== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1355== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1355== Command: ./tester brd
==1355== Parent PID: 1354
==1355== 
==1355== Use of uninitialised value of size 8
==1355==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1355==    by 0x402255: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1355==    by 0x40339C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1355==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1355== 
==1355== Invalid write of size 8
==1355==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1355==    by 0x402255: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1355==    by 0x40339C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1355==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1355==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1355== 
==1355== 
==1355== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1355==  Access not within mapped region at address 0x0
==1355==    at 0x4020DD: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1355==    by 0x402255: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1355==    by 0x40339C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1355==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1355==  If you believe this happened as a result of a stack
==1355==  overflow in your program's main thread (unlikely but
==1355==  possible), you can try to increase the size of the
==1355==  main thread stack using the --main-stacksize= flag.
==1355==  The main thread stack size used in this run was 8388608.
==1355== 
==1355== HEAP SUMMARY:
==1355==     in use at exit: 120 bytes in 11 blocks
==1355==   total heap usage: 12 allocs, 1 frees, 4,216 bytes allocated
==1355== 
==1355== LEAK SUMMARY:
==1355==    definitely lost: 0 bytes in 0 blocks
==1355==    indirectly lost: 0 bytes in 0 blocks
==1355==      possibly lost: 0 bytes in 0 blocks
==1355==    still reachable: 120 bytes in 11 blocks
==1355==         suppressed: 0 bytes in 0 blocks
==1355== Rerun with --leak-check=full to see details of leaked memory
==1355== 
==1355== For counts of detected and suppressed errors, rerun with: -v
==1355== Use --track-origins=yes to see where uninitialised values come from
==1355== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
